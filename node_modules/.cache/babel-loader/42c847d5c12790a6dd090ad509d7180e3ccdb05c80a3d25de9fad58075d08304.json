{"ast":null,"code":"var _jsxFileName = \"/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index';\nimport { fetchAllPlayers } from '../ajaxHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //have some state here\n  const [players, setPlayers] = useState([]);\n  // const [singlePlayer, setSinglePlayer] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  //getAllPlayers function to be used in useEffect because it needs async/await\n  const getAllPlayers = async () => {\n    const playerList = await fetchAllPlayers();\n    //console.log(playerList);\n    //playerList.forEach(player => console.log(player.id));\n    setPlayers(playerList);\n    setToggle(false);\n  };\n\n  //useEffect to get initial players\n  useEffect(() => {\n    getAllPlayers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlayerForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Players, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n      players: players,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SinglePlayer, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"lV/W18sPpyel9mMwEFXF445C6x0=\");\n_c = App;\nexport default App;\n\n///      \n\n//befire use effect:\n//getSinglePlayer function to be used in useEffect because it needs async/await\n// const getSinglePlayer = async (playerId) => {\n//     const singlePlayer = await fetchSinglePlayer(playerId);\n//     console.log(`this is the single player: ${singlePlayer}`);\n//     setSinglePlayer(singlePlayer);\n// }\n\n//in use effect:\n// getSinglePlayer(players.id);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Players","PlayerForm","PlayerCard","SinglePlayer","fetchAllPlayers","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","players","setPlayers","toggle","setToggle","getAllPlayers","playerList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index'\nimport { fetchAllPlayers } from '../ajaxHelpers';\n\n\nconst App = () => {\n    //have some state here\n    const [players, setPlayers] = useState([]);\n    // const [singlePlayer, setSinglePlayer] = useState([]);\n    const [toggle, setToggle] = useState(false);\n\n    //getAllPlayers function to be used in useEffect because it needs async/await\n    const getAllPlayers = async () => {\n        const playerList = await fetchAllPlayers();\n        //console.log(playerList);\n        //playerList.forEach(player => console.log(player.id));\n        setPlayers(playerList);\n        setToggle(false);\n    }\n\n    //useEffect to get initial players\n    useEffect(() => {\n        getAllPlayers();\n        \n    }, [])\n \n    return (\n    <>\n        <PlayerForm />\n        <Players players={players} />\n        <PlayerCard players={players} toggle={toggle}/>\n        <SinglePlayer players={players} />\n    </>\n    )\n}\n\nexport default App\n\n\n\n\n\n\n///      \n\n\n//befire use effect:\n    //getSinglePlayer function to be used in useEffect because it needs async/await\n    // const getSinglePlayer = async (playerId) => {\n    //     const singlePlayer = await fetchSinglePlayer(playerId);\n    //     console.log(`this is the single player: ${singlePlayer}`);\n    //     setSinglePlayer(singlePlayer);\n    // }\n\n\n//in use effect:\n// getSinglePlayer(players.id);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,SAAS;AACvE,SAASC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,UAAU,GAAG,MAAMZ,eAAe,EAAE;IAC1C;IACA;IACAQ,UAAU,CAACI,UAAU,CAAC;IACtBF,SAAS,CAAC,KAAK,CAAC;EACpB,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZgB,aAAa,EAAE;EAEnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAT,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA,CAACL,UAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdf,OAAA,CAACN,OAAO;MAACW,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7Bf,OAAA,CAACJ,UAAU;MAACS,OAAO,EAAEA,OAAQ;MAACE,MAAM,EAAEA;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC/Cf,OAAA,CAACH,YAAY;MAACQ,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACnC;AAEP,CAAC;AAAAX,EAAA,CA7BKD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA+BT,eAAeA,GAAG;;AAOlB;;AAGA;AACI;AACA;AACA;AACA;AACA;AACA;;AAGJ;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}