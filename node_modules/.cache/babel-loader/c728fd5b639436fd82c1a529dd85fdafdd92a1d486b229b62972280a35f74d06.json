{"ast":null,"code":"var _jsxFileName = \"/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index';\nimport { fetchAllPlayers, fetchSinglePlayer } from '../ajaxHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //have some state here\n  const [players, setPlayers] = useState([]);\n  // const [selectedPlayer, setSelectedPlayer] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  // {\n  //     players: [{id: 2 name: crumpet}{...}{...}],\n  //     selectedPlayer: [{...}],\n  //     toggle: false\n  // }\n\n  // if see details button is clicked display single player & set toggle to !toggle\n  // if go back is clicked display all players & set toggle to !toggle\n\n  //getAllPlayers function to be used in useEffect because it needs async/await\n  const getAllPlayers = async () => {\n    const players = await fetchAllPlayers();\n    setPlayers(players);\n\n    // setToggle(false);\n\n    // const getSinglePlayer = async () => {\n    //     //for each players object, return the single player whos player matches the given id\n    //     console.log(players);\n    //     console.log(players[0].id);\n    //     const player = await fetchSinglePlayer(players.id);\n    //     console.log(players.id);\n    //     setSinglePlayer(player)\n    // }\n    // getSinglePlayer();  \n  };\n\n  //useEffect to get initial players\n  useEffect(() => {\n    getAllPlayers();\n  }, []);\n  useEffect(() => {\n    /*#__PURE__*/_jsxDEV(Players, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n    //whatever function we want to run every time toggle is changed\n  }, [toggle]);\n\n  // const toggleFunc = () => {\n  //     if (toggle === true) {\n  //         <SinglePlayer player={players}/>}\n  //     else {\n  //         <PlayerCard players={players}/>}\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlayerForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n      players: players,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"uvWdwmIfPDLGhqCjwr6u+rhf+HY=\");\n_c = App;\nexport default App;\n\n//found a good tutorial for toggle \n\n///      \n\n//befire use effect:\n//getSinglePlayer function to be used in useEffect because it needs async/await\n// const getSinglePlayer = async (playerId) => {\n//     const singlePlayer = await fetchSinglePlayer(playerId);\n//     console.log(`this is the single player: ${singlePlayer}`);\n//     setSinglePlayer(singlePlayer);\n// }\n\n//in use effect:\n// getSinglePlayer(players.id);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Players","PlayerForm","PlayerCard","SinglePlayer","fetchAllPlayers","fetchSinglePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","players","setPlayers","toggle","setToggle","getAllPlayers","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index'\nimport { fetchAllPlayers, fetchSinglePlayer } from '../ajaxHelpers';\n\n\nconst App = () => {\n    //have some state here\n    const [players, setPlayers] = useState([]);\n    // const [selectedPlayer, setSelectedPlayer] = useState([]);\n    const [toggle, setToggle] = useState(false);\n\n    // {\n    //     players: [{id: 2 name: crumpet}{...}{...}],\n    //     selectedPlayer: [{...}],\n    //     toggle: false\n    // }\n\n\n\n        // if see details button is clicked display single player & set toggle to !toggle\n        // if go back is clicked display all players & set toggle to !toggle\n\n\n\n    //getAllPlayers function to be used in useEffect because it needs async/await\n    const getAllPlayers = async () => {\n        const players = await fetchAllPlayers();\n        setPlayers(players);\n\n        // setToggle(false);\n\n        // const getSinglePlayer = async () => {\n        //     //for each players object, return the single player whos player matches the given id\n        //     console.log(players);\n        //     console.log(players[0].id);\n        //     const player = await fetchSinglePlayer(players.id);\n        //     console.log(players.id);\n        //     setSinglePlayer(player)\n        // }\n        // getSinglePlayer();  \n    }\n\n  \n\n    //useEffect to get initial players\n    useEffect(() => {\n        getAllPlayers();   \n    }, [])\n\n    useEffect(() => {\n        <Players />\n      //whatever function we want to run every time toggle is changed\n    }, [toggle])\n\n    // const toggleFunc = () => {\n    //     if (toggle === true) {\n    //         <SinglePlayer player={players}/>}\n    //     else {\n    //         <PlayerCard players={players}/>}\n    //     }\n \n    return (\n    <>\n        <PlayerForm />\n        {/* <Players players={players} /> */}\n        <PlayerCard players={players} toggle={toggle}/>\n        {/* <SinglePlayer players={players} />  */}\n\n    </>\n    )\n}\n\nexport default App\n\n\n//found a good tutorial for toggle \n\n\n\n///      \n\n\n//befire use effect:\n    //getSinglePlayer function to be used in useEffect because it needs async/await\n    // const getSinglePlayer = async (playerId) => {\n    //     const singlePlayer = await fetchSinglePlayer(playerId);\n    //     console.log(`this is the single player: ${singlePlayer}`);\n    //     setSinglePlayer(singlePlayer);\n    // }\n\n\n//in use effect:\n// getSinglePlayer(players.id);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,SAAS;AACvE,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA;EACA;EACA;EACA;;EAII;EACA;;EAIJ;EACA,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMJ,OAAO,GAAG,MAAMR,eAAe,EAAE;IACvCS,UAAU,CAACD,OAAO,CAAC;;IAEnB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EAID;EACAb,SAAS,CAAC,MAAM;IACZiB,aAAa,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZ,aAAAQ,OAAA,CAACP,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IACb;EACF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACAP,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA,CAACN,UAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEdb,OAAA,CAACL,UAAU;MAACU,OAAO,EAAEA,OAAQ;MAACE,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBAGhD;AAEP,CAAC;AAAAT,EAAA,CAjEKD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmET,eAAeA,GAAG;;AAGlB;;AAIA;;AAGA;AACI;AACA;AACA;AACA;AACA;AACA;;AAGJ;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}