{"ast":null,"code":"var _jsxFileName = \"/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index';\nimport { fetchAllPlayers, fetchSinglePlayer } from '../ajaxHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //have some state here\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState([]);\n  // const [toggle, setToggle] = useState(false);\n\n  // {\n  //     players: [{id: 2 name: crumpet}{...}{...}],\n  //     selectedPlayer: {...},\n  // }\n\n  //getAllPlayers function to be used in useEffect because it needs async/await\n  const getAllPlayers = async () => {\n    const players = await fetchAllPlayers();\n    setPlayers(players);\n\n    // setToggle(false);\n\n    const getSinglePlayer = async playerId => {\n      //for each players object, return the single player whos player matches the given id\n      console.log(players);\n      const player = await fetchSinglePlayer(playerId);\n      setSinglePlayer(player);\n    };\n    getSinglePlayer();\n  };\n\n  //useEffect to get initial players\n  useEffect(() => {\n    getAllPlayers();\n  }, []);\n  useEffect(() => {\n    if (players.length > 0) {\n      const playerId = players[0].id; // get the id of the first player\n      getSinglePlayer(playerId);\n    }\n  }, [players]);\n\n  // const toggleFunc = () => {\n  //     if (toggle === true) {\n  //         <SinglePlayer player={players}/>}\n  //     else {\n  //         <PlayerCard players={players}/>}\n  //     }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlayerForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), selectedPlayer && /*#__PURE__*/_jsxDEV(SinglePlayer, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"5iOmebZiFYevyOI4jduYHu1AR1Y=\");\n_c = App;\nexport default App;\n\n//found a good tutorial for toggle \n\n///      \n\n//befire use effect:\n//getSinglePlayer function to be used in useEffect because it needs async/await\n// const getSinglePlayer = async (playerId) => {\n//     const singlePlayer = await fetchSinglePlayer(playerId);\n//     console.log(`this is the single player: ${singlePlayer}`);\n//     setSinglePlayer(singlePlayer);\n// }\n\n//in use effect:\n// getSinglePlayer(players.id);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Players","PlayerForm","PlayerCard","SinglePlayer","fetchAllPlayers","fetchSinglePlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","players","setPlayers","selectedPlayer","setSelectedPlayer","getAllPlayers","getSinglePlayer","playerId","console","log","player","setSinglePlayer","length","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/App.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Players, PlayerForm, PlayerCard, SinglePlayer } from './index'\nimport { fetchAllPlayers, fetchSinglePlayer } from '../ajaxHelpers';\n\n\nconst App = () => {\n    //have some state here\n    const [players, setPlayers] = useState([]);\n    const [selectedPlayer, setSelectedPlayer] = useState([]);\n    // const [toggle, setToggle] = useState(false);\n\n    // {\n    //     players: [{id: 2 name: crumpet}{...}{...}],\n    //     selectedPlayer: {...},\n    // }\n\n    //getAllPlayers function to be used in useEffect because it needs async/await\n    const getAllPlayers = async () => {\n        const players = await fetchAllPlayers();\n        setPlayers(players);\n\n        // setToggle(false);\n\n        const getSinglePlayer = async (playerId) => {\n            //for each players object, return the single player whos player matches the given id\n            console.log(players);\n            const player = await fetchSinglePlayer(playerId);\n            setSinglePlayer(player)\n        }\n        getSinglePlayer();  \n    }\n\n  \n\n    //useEffect to get initial players\n    useEffect(() => {\n        getAllPlayers();   \n  \n    }, [])\n\n    useEffect(() => {\n        if (players.length > 0) {\n            const playerId = players[0].id; // get the id of the first player\n            getSinglePlayer(playerId);\n          }\n    }, [players])\n\n    // const toggleFunc = () => {\n    //     if (toggle === true) {\n    //         <SinglePlayer player={players}/>}\n    //     else {\n    //         <PlayerCard players={players}/>}\n    //     }\n \n    return (\n    <>\n        <PlayerForm />\n        {/* <Players players={players} /> */}\n        <PlayerCard players={players} />\n        {selectedPlayer && <SinglePlayer players={players} /> }\n\n    </>\n    )\n}\n\nexport default App\n\n\n//found a good tutorial for toggle \n\n\n\n///      \n\n\n//befire use effect:\n    //getSinglePlayer function to be used in useEffect because it needs async/await\n    // const getSinglePlayer = async (playerId) => {\n    //     const singlePlayer = await fetchSinglePlayer(playerId);\n    //     console.log(`this is the single player: ${singlePlayer}`);\n    //     setSinglePlayer(singlePlayer);\n    // }\n\n\n//in use effect:\n// getSinglePlayer(players.id);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,OAAO,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,SAAS;AACvE,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD;;EAEA;EACA;EACA;EACA;;EAEA;EACA,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMJ,OAAO,GAAG,MAAMR,eAAe,EAAE;IACvCS,UAAU,CAACD,OAAO,CAAC;;IAEnB;;IAEA,MAAMK,eAAe,GAAG,MAAOC,QAAQ,IAAK;MACxC;MACAC,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;MACpB,MAAMS,MAAM,GAAG,MAAMhB,iBAAiB,CAACa,QAAQ,CAAC;MAChDI,eAAe,CAACD,MAAM,CAAC;IAC3B,CAAC;IACDJ,eAAe,EAAE;EACrB,CAAC;;EAID;EACAlB,SAAS,CAAC,MAAM;IACZiB,aAAa,EAAE;EAEnB,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZ,IAAIa,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACpB,MAAML,QAAQ,GAAGN,OAAO,CAAC,CAAC,CAAC,CAACY,EAAE,CAAC,CAAC;MAChCP,eAAe,CAACC,QAAQ,CAAC;IAC3B;EACN,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;;EAEb;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACAL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACN,UAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEdtB,OAAA,CAACL,UAAU;MAACU,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC/Bf,cAAc,iBAAIP,OAAA,CAACJ,YAAY;MAACS,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAEtD;AAEP,CAAC;AAAAlB,EAAA,CA1DKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4DT,eAAeA,GAAG;;AAGlB;;AAIA;;AAGA;AACI;AACA;AACA;AACA;AACA;AACA;;AAGJ;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}