{"ast":null,"code":"var _jsxFileName = \"/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/SinglePlayer.jsx\";\nimport React from 'react';\nimport Players from './index';\nimport { PlayerCard } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SinglePlayer = _ref => {\n  let {\n    players\n  } = _ref;\n  try {\n    console.log('itworked');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"all-players-container\",\n        children: [\"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-player-card-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n    // return (\n\n    //     <>\n    //     <div id='single-player-view'>\n    //         {players.map((player, index) => {\n    //             return (\n    //                 <div className = 'single-player-card' key={player.name + index}> \n    //                 <div className=\"header-info\" >\n    //                 <p className='pup-title'>{player.name}</p>\n    //                 <p className='pup-number'>{player.id}</p>\n    //                 </div>\n    //                 <p>{player.status}</p>\n    //                 <p>{player.breed}</p>\n    //                 <img src={player.imageUrl} alt=\"\" />\n    //                 <button id=\"see-all\" onClick={PlayerCard}>Back to all players</button>\n    //                 </div>\n    //             )\n    //         })}\n    //     </div>\n    //     </>\n    // )\n  } catch (error) {\n    console.log('single Player error');\n  }\n};\n_c = SinglePlayer;\nexport default SinglePlayer;\n\n//onclick see details => run a function that will \n\n// const SinglePlayer = ({players}) => {\n//     let playerContainerHTML = '';\n//     players.map((player) => {\n//         let playerHTML = `\n//         <div id='single-player-view'>\n//             <div class=\"header-info\">\n//                 <p>${player.status}</p>\n//                 <p>${player.breed}</p>\n//                 <img src=\"${player.imageUrl}\" alt=\"\" />\n//                 <button id=\"see-all\">Back to all players</button>\n//             </div>\n//         </div>\n//         `;\n//         playerContainerHTML += playerHTML;\n\n//     })\n//     document.getElementById('single-player-view').innerHTML = playerContainerHTML;\n\n// }\nvar _c;\n$RefreshReg$(_c, \"SinglePlayer\");","map":{"version":3,"names":["React","Players","PlayerCard","jsxDEV","_jsxDEV","Fragment","_Fragment","SinglePlayer","_ref","players","console","log","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","error","_c","$RefreshReg$"],"sources":["/home/ania/fullstack/2303-ftb-et-web-ft/course-work/puppy-bowl-react/src/components/SinglePlayer.jsx"],"sourcesContent":["import React from 'react'\nimport Players from './index';\nimport { PlayerCard } from './index'\n\n\n\nconst SinglePlayer = ({players}) => {\n  \n    try {\n        console.log('itworked');\n\n        return (\n\n            <>\n                    <div id='all-players-container'>\n                        return (\n            <div className='single-player-card-2'></div>)\n            </div>\n            </>\n        )\n        // return (\n\n        //     <>\n        //     <div id='single-player-view'>\n        //         {players.map((player, index) => {\n        //             return (\n        //                 <div className = 'single-player-card' key={player.name + index}> \n        //                 <div className=\"header-info\" >\n        //                 <p className='pup-title'>{player.name}</p>\n        //                 <p className='pup-number'>{player.id}</p>\n        //                 </div>\n        //                 <p>{player.status}</p>\n        //                 <p>{player.breed}</p>\n        //                 <img src={player.imageUrl} alt=\"\" />\n        //                 <button id=\"see-all\" onClick={PlayerCard}>Back to all players</button>\n        //                 </div>\n        //             )\n        //         })}\n        //     </div>\n        //     </>\n        // )\n    } catch (error) {\n        console.log('single Player error');\n    }\n    \n}\n\nexport default SinglePlayer;\n\n\n\n//onclick see details => run a function that will \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const SinglePlayer = ({players}) => {\n//     let playerContainerHTML = '';\n//     players.map((player) => {\n//         let playerHTML = `\n//         <div id='single-player-view'>\n//             <div class=\"header-info\">\n//                 <p>${player.status}</p>\n//                 <p>${player.breed}</p>\n//                 <img src=\"${player.imageUrl}\" alt=\"\" />\n//                 <button id=\"see-all\">Back to all players</button>\n//             </div>\n//         </div>\n//         `;\n//         playerContainerHTML += playerHTML;\n         \n//     })\n//     document.getElementById('single-player-view').innerHTML = playerContainerHTML;\n    \n// }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,UAAU,QAAQ,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIpC,MAAMC,YAAY,GAAGC,IAAA,IAAe;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAD,IAAA;EAE3B,IAAI;IACAE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IAEvB,oBAEIP,OAAA,CAAAE,SAAA;MAAAM,QAAA,eACQR,OAAA;QAAKS,EAAE,EAAC,uBAAuB;QAAAD,QAAA,GAAC,UAExC,eAAAR,OAAA;UAAKU,SAAS,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,KAC5C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM,iBACH;IAEP;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC;AAEJ,CAAC;AAAAS,EAAA,GAvCKb,YAAY;AAyClB,eAAeA,YAAY;;AAI3B;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}